import json
import httpx

from bs4 import BeautifulSoup
from requests_html import HTMLSession

def check_exploit(email: str) -> bool:
    session = HTMLSession()

    response = session.get('https://login.live.com/login.srf')
    response.html.render()

    html = response.html.html
    soup = BeautifulSoup(html, 'html.parser')

    credential_type_url = None
    ua_id = None

    for script in soup.find_all('script'):
        if 'GetCredentialType' in script.text:
            script_text = script.text

            credential_type_url = script_text.split('b6:\'')[1].split('\'')[0]
            ua_id = script_text.split('b0:\'https://account.live.com/query.aspx?uaid=')[1].split('&')[0]

    if credential_type_url is None or ua_id is None:
        raise RuntimeError('Credential type URL or UA id not found!')

    flow_token = soup.find('input', {'id': 'i0327'}).get('value')

    client = httpx.Client()

    for cookie in session.cookies:
        client.cookies.set(cookie.name, cookie.value)

    response = client.post(credential_type_url, headers={
        'Client-Request-Id': ua_id,
        'Content-Type': 'application/json; charset=UTF-8',
        'Origin': 'https://login.live.com',
        'Referer': 'https://login.live.com/login.srf?',
        'Host': 'login.live.com'
    }, data={
        'checkPhones': False,
        'federationFlags': 3,
        'flowToken': flow_token,
        'forceotclogin': False,
        'isCookieBannerShown': False,
        'isExternalFederationDisallowed': False,
        'isFidoSupported': True,
        'isOtherIdpSupported': True,
        'isRemoteConnectSupported': False,
        'isRemoteNGCSupported': True,
        'isSignup': False,
        'otclogindisallowed': False,
        'uaid': ua_id,
        'username': email
    })

    print(response.json())

    # print(credential_type_url)

    return False

check_exploit('g@hostile.org')
# asyncio.run(check_exploit('suing7123779@outlook.com'))