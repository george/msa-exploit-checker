import sys

from colorama import init
from colorama import AnsiToWin32
from colorama import Fore

from datetime import datetime
from enum import Enum

from threading import Lock

init(wrap=False)
stream = AnsiToWin32(sys.stdout).stream

lock = Lock()


class LogLevel(Enum):
    INFO = 0,
    WARNING = 1,
    ERROR = 2,
    SEVERE = 3,


reset = '\x1b[0m'

level_data: dict[LogLevel, dict] = {
    LogLevel.INFO: {
        'color': '',
        'name': 'Info'
    },
    LogLevel.WARNING: {
        'color': Fore.YELLOW,
        'name': 'Warning'
    },
    LogLevel.ERROR: {
        'color': Fore.RED,
        'name': 'ERROR'
    },
    LogLevel.SEVERE: {
        'color': '\033[1m' + Fore.RED,
        'name': 'SEVERE'
    }
}


def log(level: LogLevel, message: str) -> None:
    lock.acquire()

    data = level_data[level]

    print(
        f'{data["color"]}{datetime.now().strftime("%m/%d/%Y, %H:%M:%S")} - MSA Exploit Checker - {data["name"]} - '
        f'{message} {Fore.RESET}', file=stream)

    lock.release()
